//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;
use crate::db::{Eui, Key, LoRaAddr};
use crate::Id;
use crate::lora::{LoRaJoinType, LoRaRegion};
use crate::product::ProductType;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "snap_device_lora_node")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: Id,
    pub device_id: Id,
    #[sea_orm(column_type = "Text")]
    pub region: LoRaRegion,
    #[sea_orm(column_type = "Text")]
    pub join_type: LoRaJoinType,
    #[sea_orm(column_type = "Text")]
    pub app_eui: Eui,
    #[sea_orm(column_type = "Text")]
    pub dev_eui: Eui,
    #[sea_orm(column_type = "Text")]
    pub app_key: Key,
    #[sea_orm(column_type = "Text")]
    pub dev_addr: LoRaAddr,
    #[sea_orm(column_type = "Text")]
    pub nwk_skey: Key,
    #[sea_orm(column_type = "Text")]
    pub app_skey: Key,
    pub class_b: bool,
    pub class_c: bool,
    pub adr: bool,
    pub rx1_delay: i16,
    pub des_rx1_delay: i16,
    pub rx1_dro: i16,
    pub des_rx1_dro: i16,
    pub rx2_dr: i16,
    pub des_rx2_dr: i16,
    pub rx2_freq: i32,
    pub des_rx2_freq: i32,
    pub d_retry: i16,
    pub c_retry: i16,
    #[sea_orm(column_type = "Text")]
    pub product_type: ProductType,
    pub dutycyle: i32,
    pub up_confirm: bool,
    pub up_dr: i16,
    pub power: i16,
    pub battery: Option<i16>,
    pub charge: bool,
    pub time_zone: i32,
    pub firmware: i32,
    pub dev_non: i32,
    pub app_non: i32,
    pub net_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::snap_devices::Entity",
        from = "Column::DeviceId",
        to = "super::snap_devices::Column::Id"
    )]
    Device,
}

impl Related<super::snap_devices::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Device.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
