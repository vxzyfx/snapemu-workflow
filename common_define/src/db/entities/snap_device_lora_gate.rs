//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;
use crate::db::Eui;
use crate::Id;
use crate::lora::LoRaRegion;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "snap_device_lora_gate")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: Id,
    pub device_id: Id,
    #[sea_orm(column_type = "Text")]
    pub region: LoRaRegion,
    #[sea_orm(column_type = "Text")]
    pub eui: Eui,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::snap_devices::Entity",
        from = "Column::DeviceId",
        to = "super::snap_devices::Column::Id"
    )]
    Device,
}


impl Related<super::snap_devices::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Device.def()
    }
}


impl ActiveModelBehavior for ActiveModel {}
